THREE.OBJLoader=(function(){var a=/^[og]\s*(.+)?/;var e=/^mtllib /;var d=/^usemtl /;function b(){var f={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(g,i){if(this.object&&this.object.fromDeclaration===false){this.object.name=g;this.object.fromDeclaration=(i!==false);return}var h=(this.object&&typeof this.object.currentMaterial==="function"?this.object.currentMaterial():undefined);if(this.object&&typeof this.object._finalize==="function"){this.object._finalize(true)}this.object={name:g||"",fromDeclaration:(i!==false),geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:true,startMaterial:function(l,k){var n=this._finalize(false);if(n&&(n.inherited||n.groupCount<=0)){this.materials.splice(n.index,1)}var m={index:this.materials.length,name:l||"",mtllib:(Array.isArray(k)&&k.length>0?k[k.length-1]:""),smooth:(n!==undefined?n.smooth:this.smooth),groupStart:(n!==undefined?n.groupEnd:0),groupEnd:-1,groupCount:-1,inherited:false,clone:function(p){var o={index:(typeof p==="number"?p:this.index),name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:false};o.clone=this.clone.bind(o);return o}};this.materials.push(m);return m},currentMaterial:function(){if(this.materials.length>0){return this.materials[this.materials.length-1]}return undefined},_finalize:function(k){var m=this.currentMaterial();if(m&&m.groupEnd===-1){m.groupEnd=this.geometry.vertices.length/3;m.groupCount=m.groupEnd-m.groupStart;m.inherited=false}if(k&&this.materials.length>1){for(var l=this.materials.length-1;l>=0;l--){if(this.materials[l].groupCount<=0){this.materials.splice(l,1)}}}if(k&&this.materials.length===0){this.materials.push({name:"",smooth:this.smooth})}return m}};if(h&&h.name&&typeof h.clone==="function"){var j=h.clone(0);j.inherited=true;this.object.materials.push(j)}this.objects.push(this.object)},finalize:function(){if(this.object&&typeof this.object._finalize==="function"){this.object._finalize(true)}},parseVertexIndex:function(i,g){var h=parseInt(i,10);return(h>=0?h-1:h+g/3)*3},parseNormalIndex:function(i,g){var h=parseInt(i,10);return(h>=0?h-1:h+g/3)*3},parseUVIndex:function(i,g){var h=parseInt(i,10);return(h>=0?h-1:h+g/2)*2},addVertex:function(h,g,k){var i=this.vertices;var j=this.object.geometry.vertices;j.push(i[h+0],i[h+1],i[h+2]);j.push(i[g+0],i[g+1],i[g+2]);j.push(i[k+0],i[k+1],i[k+2])},addVertexPoint:function(g){var h=this.vertices;var i=this.object.geometry.vertices;i.push(h[g+0],h[g+1],h[g+2])},addVertexLine:function(g){var h=this.vertices;var i=this.object.geometry.vertices;i.push(h[g+0],h[g+1],h[g+2])},addNormal:function(h,g,k){var i=this.normals;var j=this.object.geometry.normals;j.push(i[h+0],i[h+1],i[h+2]);j.push(i[g+0],i[g+1],i[g+2]);j.push(i[k+0],i[k+1],i[k+2])},addColor:function(h,g,k){var i=this.colors;var j=this.object.geometry.colors;j.push(i[h+0],i[h+1],i[h+2]);j.push(i[g+0],i[g+1],i[g+2]);j.push(i[k+0],i[k+1],i[k+2])},addUV:function(h,g,k){var i=this.uvs;var j=this.object.geometry.uvs;j.push(i[h+0],i[h+1]);j.push(i[g+0],i[g+1]);j.push(i[k+0],i[k+1])},addUVLine:function(g){var h=this.uvs;var i=this.object.geometry.uvs;i.push(h[g+0],h[g+1])},addFace:function(r,q,p,h,g,u,n,m,l){var s=this.vertices.length;var k=this.parseVertexIndex(r,s);var j=this.parseVertexIndex(q,s);var i=this.parseVertexIndex(p,s);this.addVertex(k,j,i);if(h!==undefined&&h!==""){var o=this.uvs.length;k=this.parseUVIndex(h,o);j=this.parseUVIndex(g,o);i=this.parseUVIndex(u,o);this.addUV(k,j,i)}if(n!==undefined&&n!==""){var t=this.normals.length;k=this.parseNormalIndex(n,t);j=n===m?k:this.parseNormalIndex(m,t);i=n===l?k:this.parseNormalIndex(l,t);this.addNormal(k,j,i)}if(this.colors.length>0){this.addColor(k,j,i)}},addPointGeometry:function(h){this.object.geometry.type="Points";var i=this.vertices.length;for(var j=0,g=h.length;j<g;j++){this.addVertexPoint(this.parseVertexIndex(h[j],i))}},addLineGeometry:function(j,k){this.object.geometry.type="Line";var m=this.vertices.length;var i=this.uvs.length;for(var n=0,g=j.length;n<g;n++){this.addVertexLine(this.parseVertexIndex(j[n],m))}for(var h=0,g=k.length;h<g;h++){this.addUVLine(this.parseUVIndex(k[h],i))}}};f.startObject("",false);return f}function c(f){this.manager=(f!==undefined)?f:THREE.DefaultLoadingManager;this.materials=null}c.prototype={constructor:c,load:function(g,i,k,j){var h=this;var f=new THREE.FileLoader(h.manager);f.setPath(this.path);f.load(g,function(l){i(h.parse(l))},k,j)},setPath:function(f){this.path=f;return this},setMaterials:function(f){this.materials=f;return this},parse:function(w){console.time("OBJLoader");var ab=new b();if(w.indexOf("\r\n")!==-1){w=w.replace(/\r\n/g,"\n")}if(w.indexOf("\\\n")!==-1){w=w.replace(/\\\n/g,"")}var y=w.split("\n");var f="",K="";var P=0;var p=[];var F=(typeof"".trimLeft==="function");for(var R=0,N=y.length;R<N;R++){f=y[R];f=F?f.trimLeft():f.trim();P=f.length;if(P===0){continue}K=f.charAt(0);if(K==="#"){continue}if(K==="v"){var U=f.split(/\s+/);switch(U[0]){case"v":ab.vertices.push(parseFloat(U[1]),parseFloat(U[2]),parseFloat(U[3]));if(U.length===8){ab.colors.push(parseFloat(U[4]),parseFloat(U[5]),parseFloat(U[6]))}break;case"vn":ab.normals.push(parseFloat(U[1]),parseFloat(U[2]),parseFloat(U[3]));break;case"vt":ab.uvs.push(parseFloat(U[1]),parseFloat(U[2]));break}}else{if(K==="f"){var z=f.substr(1).trim();var L=z.split(/\s+/);var u=[];for(var Q=0,g=L.length;Q<g;Q++){var q=L[Q];if(q.length>0){var aa=q.split("/");u.push(aa)}}var Y=u[0];for(var Q=1,g=u.length-1;Q<g;Q++){var W=u[Q];var V=u[Q+1];ab.addFace(Y[0],W[0],V[0],Y[1],W[1],V[1],Y[2],W[2],V[2])}}else{if(K==="l"){var k=f.substring(1).trim().split(" ");var t=[],G=[];if(f.indexOf("/")===-1){t=k}else{for(var A=0,E=k.length;A<E;A++){var S=k[A].split("/");if(S[0]!==""){t.push(S[0])}if(S[1]!==""){G.push(S[1])}}}ab.addLineGeometry(t,G)}else{if(K==="p"){var z=f.substr(1).trim();var v=z.split(" ");ab.addPointGeometry(v)}else{if((p=a.exec(f))!==null){var h=(" "+p[0].substr(1).trim()).substr(1);ab.startObject(h)}else{if(d.test(f)){ab.object.startMaterial(f.substring(7).trim(),ab.materialLibraries)}else{if(e.test(f)){ab.materialLibraries.push(f.substring(7).trim())}else{if(K==="s"){p=f.split(" ");if(p.length>1){var I=p[1].trim().toLowerCase();ab.object.smooth=(I!=="0"&&I!=="off")}else{ab.object.smooth=true}var O=ab.object.currentMaterial();if(O){O.smooth=ab.object.smooth}}else{if(f==="\0"){continue}throw new Error('THREE.OBJLoader: Unexpected line: "'+f+'"')}}}}}}}}}ab.finalize();var B=new THREE.Group();B.materialLibraries=[].concat(ab.materialLibraries);for(var R=0,N=ab.objects.length;R<N;R++){var H=ab.objects[R];var m=H.geometry;var C=H.materials;var J=(m.type==="Line");var D=(m.type==="Points");var X=false;if(m.vertices.length===0){continue}var M=new THREE.BufferGeometry();M.addAttribute("position",new THREE.Float32BufferAttribute(m.vertices,3));if(m.normals.length>0){M.addAttribute("normal",new THREE.Float32BufferAttribute(m.normals,3))}else{M.computeVertexNormals()}if(m.colors.length>0){X=true;M.addAttribute("color",new THREE.Float32BufferAttribute(m.colors,3))}if(m.uvs.length>0){M.addAttribute("uv",new THREE.Float32BufferAttribute(m.uvs,2))}var T=[];for(var n=0,o=C.length;n<o;n++){var s=C[n];var O=undefined;if(this.materials!==null){O=this.materials.create(s.name);if(J&&O&&!(O instanceof THREE.LineBasicMaterial)){var Z=new THREE.LineBasicMaterial();THREE.Material.prototype.copy.call(Z,O);Z.color.copy(O.color);Z.lights=false;O=Z}else{if(D&&O&&!(O instanceof THREE.PointsMaterial)){var x=new THREE.PointsMaterial({size:10,sizeAttenuation:false});THREE.Material.prototype.copy.call(x,O);x.color.copy(O.color);x.map=O.map;x.lights=false;O=x}}}if(!O){if(J){O=new THREE.LineBasicMaterial()}else{if(D){O=new THREE.PointsMaterial({size:1,sizeAttenuation:false})}else{O=new THREE.MeshPhongMaterial()}}O.name=s.name}O.flatShading=s.smooth?false:true;O.vertexColors=X?THREE.VertexColors:THREE.NoColors;T.push(O)}var r;if(T.length>1){for(var n=0,o=C.length;n<o;n++){var s=C[n];M.addGroup(s.groupStart,s.groupCount,n)}if(J){r=new THREE.LineSegments(M,T)}else{if(D){r=new THREE.Points(M,T)}else{r=new THREE.Mesh(M,T)}}}else{if(J){r=new THREE.LineSegments(M,T[0])}else{if(D){r=new THREE.Points(M,T[0])}else{r=new THREE.Mesh(M,T[0])}}}r.name=H.name;B.add(r)}console.timeEnd("OBJLoader");return B}};return c})();
